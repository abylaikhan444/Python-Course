# s = '01234567891011121314151617'
# for i in range(0, len(s), 5):
#     print(s[i], end='')
#
#
# b = 'In 2010'
#
# print(len(b))
# from numbers import Number

#
# example_word = input('Enter a word: ')
#
# for i in range(len(example_word)):
#     if i % 2 == 0:
#         print(example_word[i])

# .................................................................................................................................................


# a = input()
#
# for i in range(-1, -len(a) - 1, -1):
#     print(a[i])

# .................................................................................................................................................

# name = input("What is your name? ")
# surname = input("What is your surname? ")
# father_name = input("What is your father's name? ")
#
# print(surname[0], name[0], father_name[0], sep='')


# .................................................................................................................................................

#
# string_number = input()
# sum_int = 0
#
# for i in range(0,len(string_number)):
#     sum_int = sum_int + int(string_number[i])
# print(sum_int)


# .................................................................................................................................................


# word = input()
# count = 0
#
# for i in range(len(word)):
#     if word[i] in '0123456789':
#         count += 1
#
# if count > 0:
#     print('–¶–∏—Ñ—Ä–∞')
# else:
#     print('–¶–∏—Ñ—Ä –Ω–µ—Ç')


# .................................................................................................................................................

# word = input()
# multiply_count = 0
# sum_count = 0
#
# for i in range(len(word)):
#     if word[i] in '*':
#         multiply_count += 1
#     elif word[i] in '+':
#         sum_count += 1
#
# print('–°–∏–º–≤–æ–ª + –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è', sum_count, '—Ä–∞–∑')
# print('–°–∏–º–≤–æ–ª * –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è', multiply_count, '—Ä–∞–∑')


# .................................................................................................................................................

# word = input()
# count = 0
#
# for i in range(len(word) - 1):
#     if word[i] == word[i + 1]:
#         count += 1
#
# print(count)


# .................................................................................................................................................

# word = input().lower()
# count_vowels = 0
# count_spoken = 0
#
# for i in word:
#     if i in '–∞—É–æ—ã–∏—ç—è—é–µ':
#         count_vowels += 1
#     elif i in '–±–≤–≥–¥–∂–∑–π–∫–ª–º–Ω–ø—Ä—Å—Ç—Ñ—Ö—Ü—á—à—â':
#         count_spoken += 1
#
# print('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–ª–∞—Å–Ω—ã—Ö –±—É–∫–≤ —Ä–∞–≤–Ω–æ',count_vowels)
# print('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≥–ª–∞—Å–Ω—ã—Ö –±—É–∫–≤ —Ä–∞–≤–Ω–æ', count_spoken)


# .................................................................................................................................................


# num = int(input())
# reversed_num1 = ''
#
# while num > 0:
#     last = num % 2
#     reversed_num1 = str(last) + reversed_num1
#     num = num // 2
# print(reversed_num1)
# # last task

# .................................................................................................................................................


# word = input()
#
# if word[::] == word[::-1]:
#     print('YES')
# else:
#     print('NO')


# .................................................................................................................................................

# word = input()
#
# #1 –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ
# print(len(word))
#
# #2 –∏—Å—Ö–æ–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É, –ø–æ–≤—Ç–æ—Ä—ë–Ω–Ω—É—é 3 —Ä–∞–∑–∞;
# for i in range(3):
#     print(word, end='')
#
# #3 –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª —Å—Ç—Ä–æ–∫–∏;
# print()
# print(word[0], end='\n')
#
# #4 –ø–µ—Ä–≤—ã–µ —Ç—Ä–∏ —Å–∏–º–≤–æ–ª–∞ —Å—Ç—Ä–æ–∫–∏;
#
# print(word[0:3])
#
# #5 –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∏ —Å–∏–º–≤–æ–ª–∞ —Å—Ç—Ä–æ–∫–∏;
#
# print(word[-3:])
#
# #6 —Å—Ç—Ä–æ–∫—É –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ;
#
# print(word[::-1])
#
# #7—Å—Ç—Ä–æ–∫—É —Å —É–¥–∞–ª—ë–Ω–Ω—ã–º –ø–µ—Ä–≤—ã–º –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º —Å–∏–º–≤–æ–ª–∞–º–∏.
#
# print(word[1:len(word) - 1])

# .................................................................................................................................................

# —Ç—Ä–µ—Ç–∏–π —Å–∏–º–≤–æ–ª —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏;
# –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏;
# –ø–µ—Ä–≤—ã–µ –ø—è—Ç—å —Å–∏–º–≤–æ–ª–æ–≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏;
# –≤—Å—é —Å—Ç—Ä–æ–∫—É, –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–≤—É—Ö —Å–∏–º–≤–æ–ª–æ–≤;
# –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å —á—ë—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏;
# –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å –Ω–µ—á—ë—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏;
# –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ;
# –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å—Ç—Ä–æ–∫–∏ —á–µ—Ä–µ–∑ –æ–¥–∏–Ω –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ.


# word = input()
#
# print(word[2])
#
# print(word[len(word)-2])
#
# print(word[:5])
#
# print(word[:len(word)-2])
#
# print(word[::2])
#
# print(word[1::2])
#
# print(word[::-1])
#
# print(word[::-2])

# .................................................................................................................................................


# word = input()
# left_side_word = ''
# right_side_word = ''
#
# if len(word) % 2 == 0:
#     left_side_word = word[:len(word) // 2]
#     right_side_word = word[(len(word) // 2):]
#     print(right_side_word + left_side_word)
# elif len(word) % 2 == 1:
#     left_side_word = word[:(len(word) // 2) + 1]
#     right_side_word = word[(len(word) // 2) + 1:]
#     print(right_side_word + left_side_word)


# .................................................................................................................................................

# s = ' foO BaR BAZ quX'
# print(s.capitalize())


# .................................................................................................................................................


# user_name = input()
# user_check_name = user_name.title()
#
# if user_name == user_check_name:
#     print('YES')
# else:
#     print('NO')

# .................................................................................................................................................

# word = input()
# print(word.swapcase())

# .................................................................................................................................................

#
# word = input()
# copy_word = word.lower()
#
# if '—Ö–æ—Ä–æ—à' in copy_word:
#     print('YES')
# else:
#     print('NO')

# .................................................................................................................................................

# word = input()
# count = 0
#
# for i in range(len(word)):
#     if word[i] in 'qwertyuiopasdfghjklzxcvbnm':
#         count += 1
# print(count)

# .................................................................................................................................................

# üìò –®–ü–û–†–ì–ê–õ–ö–ê –ü–û –°–¢–†–û–ö–û–í–´–ú –ú–ï–¢–û–î–ê–ú PYTHON

# üîπ count(substring[, start[, end]])
# –°—á–∏—Ç–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤ —Å—Ç—Ä–æ–∫–µ.
# –ü—Ä–∏–º–µ—Ä:
# 'banana'.count('a') ‚Üí 3

# üîπ startswith(prefix[, start[, end]])
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞.
# –ü—Ä–∏–º–µ—Ä:
# 'python'.startswith('py') ‚Üí True

# üîπ endswith(suffix[, start[, end]])
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å—É—Ñ—Ñ–∏–∫—Å–æ–º.
# –ü—Ä–∏–º–µ—Ä:
# 'lesson.txt'.endswith('.txt') ‚Üí True

# üîπ find(sub[, start[, end]])
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ -1, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.
# –ü—Ä–∏–º–µ—Ä:
# 'hello'.find('l') ‚Üí 2

# üîπ rfind(sub[, start[, end]])
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ -1, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.
# –ü—Ä–∏–º–µ—Ä:
# 'hello'.rfind('l') ‚Üí 3

# üîπ index(sub[, start[, end]])
# –ö–∞–∫ find(), –Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É ValueError, –µ—Å–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.
# –ü—Ä–∏–º–µ—Ä:
# 'hello'.index('e') ‚Üí 1

# üîπ rindex(sub[, start[, end]])
# –ö–∞–∫ rfind(), –Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.
# –ü—Ä–∏–º–µ—Ä:
# 'hello'.rindex('l') ‚Üí 3

# üîπ strip([chars])
# –£–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã (–∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã) —Å –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏.
# –ü—Ä–∏–º–µ—Ä:
# '  hi  '.strip() ‚Üí 'hi'

# üîπ lstrip([chars])
# –£–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã (–∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã) —Ç–æ–ª—å–∫–æ —Å–ª–µ–≤–∞.
# –ü—Ä–∏–º–µ—Ä:
# '  hi  '.lstrip() ‚Üí 'hi  '

# üîπ rstrip([chars])
# –£–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã (–∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã) —Ç–æ–ª—å–∫–æ —Å–ø—Ä–∞–≤–∞.
# –ü—Ä–∏–º–µ—Ä:
# '  hi  '.rstrip() ‚Üí '  hi'

# üîπ replace(old, new[, count])
# –ó–∞–º–µ–Ω—è–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É old –Ω–∞ new. –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–µ–Ω.
# –ü—Ä–∏–º–µ—Ä:
# 'banana'.replace('a', 'o') ‚Üí 'bonono'


# .................................................................................................................................................


# s = input()
# word_count = s.count(' ') + 1
# print(word_count)


# .................................................................................................................................................

# word = input()
# word_in_lowercase = word.lower()
# count_Aa = 0
# count_Gg = 0
# count_Cc = 0
# count_Tt = 0
#
# for i in range(len(word_in_lowercase)):
#     if word_in_lowercase[i] == '–∞':
#         count_Aa += 1
#     elif word_in_lowercase[i] == '–≥':
#         count_Gg += 1
#     elif word_in_lowercase[i] == '—Ü':
#         count_Cc += 1
#     elif word_in_lowercase[i] == '—Ç':
#         count_Tt += 1
#
# print('–ê–¥–µ–Ω–∏–Ω: ', count_Aa)
# print('–ì—É–∞–Ω–∏–Ω: ', count_Gg)
# print('–¶–∏—Ç–æ–∑–∏–Ω: ', count_Cc)
# print('–¢–∏–º–∏–Ω: ', count_Tt)


# .................................................................................................................................................


# word = input()
# count = 0
#
# for i in word:
#     if i in '1234567890':
#         count += 1
#
# print(count)

# .................................................................................................................................................# .................................................................................................................................................

# word = input()
#
# if word.endswith('.com') or word.endswith('.ru'):
#     print('YES')
# else:
#     print('NO')

# .................................................................................................................................................


# def travel_distance(avg_speed = 600, travel_time = 60):
#     KM_PER_MILE = 1.609344
#     KNOTS = 1.852
#     travel_hours = travel_time * 60
#     travel_knots = (avg_speed / KNOTS) * travel_hours
#     travel_kms = travel_knots * KNOTS
#     return travel_kms


# .................................................................................................................................................


# amount = int(input())
#
# for i in  range(amount):
#     comment = input()
#     if comment.strip() == '':
#         print(f"{i + 1}: COMMENT SHOULD BE DELETED")
#     else:
#         print(f"{i + 1}: {comment}")


# ................................................................................................................................................


# user_name = input()
#
# if (user_name.startswith('@') and
#     5 <= len(user_name) <= 15 and
#     user_name[1:].isalnum() and
#     (user_name[1:].islower() or user_name[1:].isdigit())):
#     print('Correct')
# else:
#     print('Incorrect')

# .................................................................................................................................................


# plate = input()
#
# letters = '–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•'
#
# if (len(plate) in (9, 10) and
#     plate[0] in letters and
#     plate[1:4].isdigit() and
#     plate[4] in letters and
#     plate[5] in letters and
#     plate[6] == '_' and
#     plate[7:].isdigit()):
#     print('YES')
# else:
#     print('NO')

# .................................................................................................................................................

# a, b = int(input()), int(input())
#
# print(f'–î–ª—è —á–∏—Å–µ–ª {a} –∏ {b}:')
# print(f'  –°—É–º–º–∞ –∫—É–±–æ–≤: {a}**3 + {b}**3 = {a**3 + b**3}')
# print(f'  –ö—É–± —Å—É–º–º—ã: ({a} + {b})**3 = {(a + b)**3}')


# .................................................................................................................................................


# import numpy as np
#
# number_date = int(input())
# weight_person = int(input())
#
# for i in np.arange(100, 87, -0.2):
#     print(round(i))

#
# number_date = int(input())
# input_weight_person = float(input())
#
#
# right_weight = 100 - 0.2 * number_date
#
# if  input_weight_person > right_weight:
#     print(f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
#     print(f'#{number_date} –î–ï–ù–¨: –¢–ï–ö–£–©–ò–ô –í–ï–° = {input_weight_person} –∫–≥, –¶–ï–õ–¨ –ø–æ –í–ï–°–£ = {right_weight} –∫–≥')
# else:
#     print('–í—Å–µ –∏–¥–µ—Ç –ø–æ –ø–ª–∞–Ω—É')
#     print(f'#{number_date} –î–ï–ù–¨: –¢–ï–ö–£–©–ò–ô –í–ï–° = {input_weight_person} –∫–≥, –¶–ï–õ–¨ –ø–æ –í–ï–°–£ = {right_weight} –∫–≥')



# .................................................................................................................................................



letter = input()
letter_code = ord(letter)

print(letter_code)
